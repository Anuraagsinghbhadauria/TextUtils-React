{"version":3,"sources":["components/Navbar.js","components/TextForms.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["nav","props","react_default","a","createElement","className","concat","mode","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","togglemode","role","htmlFor","btntext","TextForms","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showalert","toLowerCase","navigator","clipboard","writeText","split","join","trim","length","replace","filter","alert","class","msg","App","setMode","_useState3","_useState4","setbtntext","_useState5","_useState6","setalert","document","body","title","Alert_alert","message","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"6KAMe,SAASA,EAAIC,GAC1B,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCL,EAAMM,KAA1C,QAAAD,OAAqDL,EAAMM,OAC1EL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAAjC,aACAN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBI,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC1LZ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BU,GAAG,0BAC3Cb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBW,eAAa,OAAOR,KAAK,KAAxD,UAUJN,EAAAC,EAAAC,cAAA,OAAKC,UAAS,+BAAAC,OAA8C,UAAbL,EAAMM,KAAe,OAAO,UAC3EL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBY,QAAShB,EAAMiB,WAAYT,KAAK,WAAWU,KAAK,SAASJ,GAAG,2BAChGb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBe,QAAQ,0BAA0BnB,EAAMoB,aC1BnE,SAASC,EAAUrB,GAEhC,IAFuCsB,EAkCfC,mBAAS,KAlCMC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAkChCK,EAlCgCH,EAAA,GAkC1BI,EAlC0BJ,EAAA,GAmCvC,OACIvB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KACF5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY0B,MAAO,CAACC,MAAoB,SAAb/B,EAAMM,KAAc,QAAQ,UAClEL,EAAAC,EAAAC,cAAA,UAAKH,EAAMgC,SACX/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAgB6B,MAAON,EAAMG,MAAO,CAACI,gBAA8B,SAAblC,EAAMM,KAAc,UAAU,QAASyB,MAAoB,SAAb/B,EAAMM,KAAc,QAAQ,SAAU6B,SAT/I,SAACC,GACpBR,EAAQQ,EAAMC,OAAOJ,QAQuKnB,GAAG,QAAQwB,KAAK,OAExMrC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BY,QAxChC,WAChB,IAAIuB,EAAQZ,EAAKa,cACjBZ,EAAQW,GACRvC,EAAMyC,UAAU,4BAqCd,aACAxC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BY,QAnClC,WAClB,IAAIuB,EAAQZ,EAAKe,cACjBd,EAAQW,GACRvC,EAAMyC,UAAU,4BAgCV,aACAxC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BY,QA9BhC,WACpB2B,UAAUC,UAAUC,UAAUlB,GAC9B3B,EAAMyC,UAAW,0BA4BX,aACAxC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BY,QA1B/B,WAErBY,EADY,IAEZ5B,EAAMyC,UAAU,uBAuBV,cACAxC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BY,QArB/B,WACrB,IAAIuB,EAAQZ,EAAKmB,MAAM,QACvBlB,EAAQW,EAAQQ,KAAK,MACrB/C,EAAMyC,UAAU,2BAkBV,wBAEJxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB0B,MAAO,CAACC,MAAoB,SAAb/B,EAAMM,KAAc,QAAQ,UACvEL,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAIwB,EAAKqB,OAAOC,OAAhB,eAAoCtB,EAAKuB,QAAQ,MAAO,KAAKJ,MAAM,KAAKK,OAAO,SAAAlB,GAAK,MAAc,KAAVA,IAAcgB,OAAtG,YCnDO,SAASG,EAAMpD,GAC5B,OACEA,EAAMoD,OAASnD,EAAAC,EAAAC,cAAA,OAAKkD,MAAM,kDAAkDnC,KAAK,SAC/EjB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,cAASH,EAAMoD,MAAME,OC0ChBC,MAxCf,WAAe,IAAAjC,EACUC,mBAAS,SADnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNhB,EADMkB,EAAA,GACAgC,EADAhC,EAAA,GAAAiC,EAEclC,mBAAS,aAFvBmC,EAAAjC,OAAAC,EAAA,EAAAD,CAAAgC,EAAA,GAEPrC,EAFOsC,EAAA,GAEEC,EAFFD,EAAA,GAAAE,EAGWrC,mBAAS,MAHpBsC,EAAApC,OAAAC,EAAA,EAAAD,CAAAmC,EAAA,GAGPR,EAHOS,EAAA,GAGCC,EAHDD,EAAA,GA4Bb,OACE5D,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KACA5B,EAAAC,EAAAC,cAACJ,EAAD,CAAQO,KAAMA,EAAMW,WAhBL,WACJ,UAAPX,GACFkD,EAAQ,QACRO,SAASC,KAAKlC,MAAMI,gBAAgB,UACpCyB,EAAW,qBACXI,SAASE,MAAM,yBAGfT,EAAQ,SACRO,SAASC,KAAKlC,MAAMI,gBAAgB,QACpCyB,EAAW,aACXI,SAASE,MAAM,qBAK2B7C,QAASA,IACrDnB,EAAAC,EAAAC,cAAC+D,EAAD,CAAOd,MAAOA,IACdnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACVH,EAAAC,EAAAC,cAACkB,EAAD,CAAWW,QAAQ,4BAA6B1B,KAAMA,EAAMmC,UA5BnD,SAAC0B,GACXL,EAAS,CACPR,IAAKa,IAEPC,WAAW,WACTN,EAAS,OACR,WCNIO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDdY,IAASC,OACPlF,EAAAC,EAAAC,cAACF,EAAAC,EAAMkF,WAAP,KACEnF,EAAAC,EAAAC,cAACkF,EAAD,OAEFtB,SAASuB,eAAe,SAM1BjB","file":"static/js/main.a3312334.chunk.js","sourcesContent":["import React from 'react';\r\n//import { Link } from 'react-router-dom';\r\n//import PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport default function nav(props) {\r\n  return (\r\n   <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">TextUtils</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/*<li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">About</a>\r\n        </li>*/}\r\n      </ul>\r\n      {/*<form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n  <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n  </form>*/}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n      <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.btntext}</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n )\r\n}\r\n","import React, {useState} from 'react';\r\n\r\n\r\nexport default function TextForms(props) {\r\n\r\n  const handleupclick=()=>{\r\n      let newText=text.toUpperCase()\r\n      setText(newText);\r\n      props.showalert(\"Converted to Uppercase\" )\r\n  }\r\n\r\nconst handleloclick=()=>{\r\n  let newText=text.toLowerCase()\r\n  setText(newText);\r\n  props.showalert(\"Converted to lowercase\" )\r\n}\r\n\r\nconst handlecopyclick=()=>{\r\n  navigator.clipboard.writeText(text);\r\n  props.showalert( \"Copied to clipboard!\" );\r\n}\r\n\r\nconst handleclearclick=()=>{\r\n  let newText='';\r\n  setText(newText)\r\n  props.showalert(\"Cleared all Text!\");\r\n}\r\n\r\nconst handleextraspace=()=>{\r\n  let newText=text.split(/[ ]+/);\r\n  setText(newText.join(\" \"))\r\n  props.showalert(\"Extra spaces removed!\");\r\n}\r\n\r\n  const handleonchange=(event)=>{\r\n    setText(event.target.value);\r\n}\r\n  const [text, setText] = useState(' ');\r\n  return (\r\n      <>\r\n    <div className='container' style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\"  value={text} style={{backgroundColor: props.mode==='dark'?'#3d5266':'white', color: props.mode==='dark'?'white':'black'}} onChange={handleonchange} id=\"mybox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleupclick}>UPPERCASE</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleloclick}>lowercase</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handlecopyclick}>Copy text</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleclearclick}>Clear text</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleextraspace}>Remove extra spaces</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h3>Your Text Summary</h3>\r\n        <p>{text.trim().length} characters {text.replace(/\\n/g, \" \").split(' ').filter(value => value !== \"\").length} words</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function alert(props) {\r\n  return (\r\n    props.alert && <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n      <h5><center>{props.alert.msg}</center></h5>  \r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForms from './components/TextForms';\nimport React, { useState } from \"react\";\nimport Alert from './components/Alert';\n\n\nfunction App() {\n  const [mode, setMode]= useState('light');\n  const[btntext, setbtntext]=useState('Dark Mode');\n  const[alert , setalert]=useState(null);\n   \n  const showalert=(message)=>{\n        setalert({\n          msg: message\n        })\n        setTimeout(() => {\n          setalert(null)\n        }, 1000);\n  }\n\n  const togglemode=()=>{\n    if (mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#3d5266'\n      setbtntext('Dark Mode Enabled')\n      document.title='TextUtils - DarkMode'\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white'\n      setbtntext('Dark Mode')\n      document.title='TextUtils - Home'\n    }\n  } \n  return (\n    <>\n    <Navbar mode={mode} togglemode={togglemode} btntext={btntext}/>\n    <Alert alert={alert}/>\n    <div className='container my-3'>\n         <TextForms heading=\"Enter the text to analyze\"  mode={mode} showalert={showalert}/> \n    </div>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}