{"version":3,"sources":["components/Navbar.js","components/TextForms.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["nav","props","react_default","a","createElement","className","concat","mode","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onClick","bgtoggle","showalert","togglemode","role","htmlFor","btntext","TextForms","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","trim","length","toLowerCase","str","split","i","charAt","slice","join","navigator","clipboard","writeText","replace","filter","alert","class","msg","App","setMode","_useState3","_useState4","setbtntext","_useState5","_useState6","setalert","message","setTimeout","removebgclasses","document","body","classList","remove","title","cls","add","Alert_alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"6KAMe,SAASA,EAAIC,GAC1B,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCL,EAAMM,KAA1C,QAAAD,OAAqDL,EAAMM,OAC1EL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBG,KAAK,KAAtC,aACAN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBI,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC1LZ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BU,GAAG,0BACxCb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oCAIjBH,EAAAC,EAAAC,cAAA,SAAOC,UAAS,kBAAAC,OAAiC,UAAbL,EAAMM,KAAe,OAAO,UAAWL,EAAAC,EAAAC,cAAA,mCAE3EF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACbH,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASO,QAAS,WAAKf,EAAMgB,SAAS,WAAYhB,EAAMiB,UAAU,cAAiBb,UAAU,+DAA1G,KACAH,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASO,QAAS,WAAKf,EAAMgB,SAAS,UAAWhB,EAAMiB,UAAU,kBAAoBb,UAAU,8DAA5G,KACAH,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASO,QAAS,WAAKf,EAAMgB,SAAS,QAAShB,EAAMiB,UAAU,cAAgBb,UAAU,4DAAtG,KACAH,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASO,QAAS,WAAKf,EAAMgB,SAAS,WAAYhB,EAAMiB,UAAU,0BAA4Bb,UAAU,+DAArH,KACAH,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASO,QAAS,WAAKf,EAAMgB,SAAS,SAAUhB,EAAMiB,UAAU,2BAA6Bb,UAAU,6DAApH,MAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,+BAAAC,OAA8C,UAAbL,EAAMM,KAAe,OAAO,UAC3EL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAwBW,QAASf,EAAMkB,WAAYV,KAAK,WAAWW,KAAK,SAASL,GAAG,2BACrGb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAwBgB,QAAQ,0BAA0BpB,EAAMqB,aC5BxE,SAASC,EAAUtB,GAEhC,IAFuCuB,EA6CfC,mBAAS,KA7CMC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GA6ChCK,EA7CgCH,EAAA,GA6C1BI,EA7C0BJ,EAAA,GA8CvC,OACIxB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4B,SAAA,KACF7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY2B,MAAO,CAACC,MAAoB,SAAbhC,EAAMM,KAAc,QAAQ,UAClEL,EAAAC,EAAAC,cAAA,UAAKH,EAAMiC,SACXhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAgB8B,MAAON,EAAMG,MAAO,CAACI,gBAA8B,SAAbnC,EAAMM,KAAc,UAAU,QAAS0B,MAAoB,SAAbhC,EAAMM,KAAc,QAAQ,SAAU8B,SATlJ,SAACC,GACpBR,EAAQQ,EAAMC,OAAOJ,QAQ0KpB,GAAG,QAAQyB,KAAK,OAE3MtC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BW,QAnDhC,WAChB,IAAIyB,EAAQZ,EAAKa,cACjBZ,EAAQW,GACmB,IAAvBZ,EAAKc,OAAOC,QAAc3C,EAAMiB,UAAU,4BAgD5C,aACAhB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BW,QA9ClC,WAClB,IAAIyB,EAAQZ,EAAKgB,cACjBf,EAAQW,GACmB,IAAvBZ,EAAKc,OAAOC,QAAc3C,EAAMiB,UAAU,4BA2CxC,aACAhB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BW,QAxBpC,WAGhB,IADA,IAAI8B,EAAMjB,EAAKgB,cAAcE,MAAM,KAC1BC,EAAI,EAAGA,EAAIF,EAAIF,OAAQI,IAC9BF,EAAIE,GAAKF,EAAIE,GAAGC,OAAO,GAAGP,cAAgBI,EAAIE,GAAGE,MAAM,GAEzD,IAAIT,EAAUK,EAAIK,KAAK,KACvBrB,EAAQW,GACmB,IAAvBZ,EAAKc,OAAOC,QAAc3C,EAAMiB,UAAU,8BAgBxC,aACAhB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BW,QA1ChC,WACpBoC,UAAUC,UAAUC,UAAUzB,GACH,IAAvBA,EAAKc,OAAOC,QAAc3C,EAAMiB,UAAW,0BAwCzC,QACAhB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BW,QAtC/B,WAErBc,EADY,IAERD,EAAKc,OAAOC,OAAS,GAAG3C,EAAMiB,UAAU,uBAmCtC,SACAhB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BW,QAjC/B,WACrB,IAAIyB,EAAQZ,EAAKkB,MAAM,QACvBjB,EAAQW,EAAQU,KAAK,MACM,IAAvBtB,EAAKc,OAAOC,QAAc3C,EAAMiB,UAAU,2BA8BxC,UAGJhB,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB2B,MAAO,CAACC,MAAoB,SAAbhC,EAAMM,KAAc,QAAQ,UACvEL,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAIyB,EAAKc,OAAOC,OAAhB,eAAoCf,EAAK0B,QAAQ,MAAO,KAAKR,MAAM,KAAKS,OAAO,SAAArB,GAAK,MAAc,KAAVA,IAAcS,OAAtG,UAAqHf,EAAKkB,MAAM,MAAMH,OAAS,EAA/I,iBChEO,SAASa,EAAMxD,GAC5B,OACEA,EAAMwD,OAASvD,EAAAC,EAAAC,cAAA,OAAKsD,MAAM,uDAAuDtC,KAAK,SACpFlB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,cAASH,EAAMwD,MAAME,OCiEhBC,MA/Df,WAAe,IAAApC,EACUC,mBAAS,SADnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNjB,EADMmB,EAAA,GACAmC,EADAnC,EAAA,GAAAoC,EAEcrC,mBAAS,aAFvBsC,EAAApC,OAAAC,EAAA,EAAAD,CAAAmC,EAAA,GAEPxC,EAFOyC,EAAA,GAEEC,EAFFD,EAAA,GAAAE,EAGWxC,mBAAS,MAHpByC,EAAAvC,OAAAC,EAAA,EAAAD,CAAAsC,EAAA,GAGPR,EAHOS,EAAA,GAGCC,EAHDD,EAAA,GAKPhD,EAAU,SAACkD,GACXD,EAAS,CACPR,IAAKS,IAEPC,WAAW,WACTF,EAAS,OACR,MAGHG,EAAgB,WACpBC,SAASC,KAAKC,UAAUC,OAAO,YAC/BH,SAASC,KAAKC,UAAUC,OAAO,WAC/BH,SAASC,KAAKC,UAAUC,OAAO,cAC/BH,SAASC,KAAKC,UAAUC,OAAO,aAC/BH,SAASC,KAAKC,UAAUC,OAAO,eAgCjC,OACExE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4B,SAAA,KACA7B,EAAAC,EAAAC,cAACJ,EAAD,CAAQO,KAAMA,EAAMY,WAlBL,WACfmD,IACa,UAAP/D,GACFsD,EAAQ,QACRU,SAASC,KAAKxC,MAAMI,gBAAgB,UACpC4B,EAAW,qBACXO,SAASI,MAAM,yBAGfd,EAAQ,SACRU,SAASC,KAAKxC,MAAMI,gBAAgB,QACpC4B,EAAW,aACXO,SAASI,MAAM,qBAMyBrD,QAASA,EAASL,SA/BjD,SAAC2D,GACdN,IACAC,SAASC,KAAKC,UAAUI,IAAI,MAAMD,GAChCL,SAASI,MAAM,mBAEbX,EADS,SAAPzD,EACS,sBAGA,cAuBmEW,UAAWA,IAC7FhB,EAAAC,EAAAC,cAAC0E,EAAD,CAAOrB,MAAOA,IACdvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACVH,EAAAC,EAAAC,cAACmB,EAAD,CAAWW,QAAQ,4BAA6B3B,KAAMA,EAAMW,UAAWA,OCnDjE6D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDdY,IAASC,OACP3F,EAAAC,EAAAC,cAACF,EAAAC,EAAM2F,WAAP,KACE5F,EAAAC,EAAAC,cAAC2F,EAAD,OAEFxB,SAASyB,eAAe,SAM1BjB","file":"static/js/main.ee83c4ed.chunk.js","sourcesContent":["import React from 'react';\r\n//import { Link } from 'react-router-dom';\r\n//import PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport default function nav(props) {\r\n  return (\r\n   <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"mx-3 navbar-brand\" href=\"#\">TextUtils</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n         <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n             \r\n          </ul>\r\n\r\n      <label className={`my-1 mx-2 text-${props.mode==='light'?'dark':'light'}`}><h7>More Color Thems >> </h7></label>\r\n\r\n      <div className=''>\r\n        <button type=\"button\" onClick={()=>{props.bgtoggle('success'); props.showalert('Go Green!');}}  className=\"btn btn-success mx-1 my-2 rounded-circle border border-dark\"> </button>\r\n        <button type=\"button\" onClick={()=>{props.bgtoggle('danger'); props.showalert('Shade of Red!');}} className=\"btn btn-danger mx-1 my-2 rounded-circle border border-dark\"> </button>\r\n        <button type=\"button\" onClick={()=>{props.bgtoggle('info'); props.showalert('All Cyan!');}} className=\"btn btn-info mx-1 my-2 rounded-circle border border-dark\"> </button>\r\n        <button type=\"button\" onClick={()=>{props.bgtoggle('warning'); props.showalert('How lovely Yellow is!');}} className=\"btn btn-warning mx-1 my-2 rounded-circle border border-dark\"> </button>\r\n        <button type=\"button\" onClick={()=>{props.bgtoggle('light'); props.showalert('For the love of White!');}} className=\"btn btn-light mx-1 my-2 rounded-circle border border-dark\"> </button>\r\n      </div>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n      <input className=\"form-check-input mx-1\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n      <label className=\"form-check-label mx-1\" htmlFor=\"flexSwitchCheckDefault\">{props.btntext}</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n )\r\n}\r\n","import React, {useState} from 'react';\r\n\r\nexport default function TextForms(props) {\r\n\r\n  const handleupclick=()=>{\r\n      let newText=text.toUpperCase()\r\n      setText(newText);\r\n      if (text.trim().length !== 0){props.showalert(\"Converted to Uppercase\" )}\r\n  }\r\n\r\nconst handleloclick=()=>{\r\n  let newText=text.toLowerCase()\r\n  setText(newText);\r\n  if (text.trim().length !== 0){props.showalert(\"Converted to lowercase\" )}\r\n}\r\n\r\nconst handlecopyclick=()=>{\r\n  navigator.clipboard.writeText(text);\r\n  if (text.trim().length !== 0){props.showalert( \"Copied to clipboard!\" )}\r\n}\r\n\r\nconst handleclearclick=()=>{\r\n  let newText='';\r\n  setText(newText)\r\n  if (text.trim().length > 0){props.showalert(\"Cleared all Text!\")}\r\n}\r\n\r\nconst handleextraspace=()=>{\r\n  let newText=text.split(/[ ]+/);\r\n  setText(newText.join(\" \"))\r\n  if (text.trim().length !== 0){props.showalert(\"Extra spaces removed!\")}\r\n}\r\n\r\nconst handlecamel=()=>{\r\n  //let newText=text.replace(/([A-Z])/g,' $1');\r\n  let str = text.toLowerCase().split(' ');\r\n  for (var i = 0; i < str.length; i++) {\r\n    str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1); \r\n  }\r\n  let newText = str.join(' ');\r\n  setText(newText)\r\n  if (text.trim().length !== 0){props.showalert(\"Converted to Title Case!\")}\r\n}\r\n\r\n  const handleonchange=(event)=>{\r\n    setText(event.target.value);\r\n}\r\n  const [text, setText] = useState(' ');\r\n  return (\r\n      <>\r\n    <div className='container' style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h4>{props.heading}</h4> \r\n        <div className=\"mb-3\">\r\n           <textarea className=\"form-control\"  value={text} style={{backgroundColor: props.mode==='dark'?'#3d5266':'white', color: props.mode==='dark'?'white':'black'}} onChange={handleonchange} id=\"mybox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleupclick}>UPPERCASE</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleloclick}>lowercase</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handlecamel}>TitleCase</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handlecopyclick}>Copy</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleclearclick}>Clear</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleextraspace}>Space</button>\r\n        \r\n    </div>\r\n    <center>\r\n    <div className=\"container my-5\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h3>Your Text Summary</h3>\r\n        <p>{text.trim().length} characters {text.replace(/\\n/g, \" \").split(' ').filter(value => value !== \"\").length} words {text.split(\". \").length - 1} Sentences</p>\r\n    </div>\r\n    </center>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function alert(props) {\r\n  return (\r\n    props.alert && <div class=\"alert alert-transparent alert-dismissible fade show \" role=\"alert\">\r\n      <h5><center>{props.alert.msg}</center></h5>  \r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForms from './components/TextForms';\nimport React, { useState } from \"react\";\nimport Alert from './components/Alert';\n\n\nfunction App() {\n  const [mode, setMode]= useState('light');\n  const[btntext, setbtntext]=useState('Dark Mode');\n  const[alert , setalert]=useState(null);\n   \n  const showalert=(message)=>{\n        setalert({\n          msg: message\n        })\n        setTimeout(() => {\n          setalert(null)\n        }, 1000);\n  }\n   \n  const removebgclasses=()=>{\n    document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-info')\n    document.body.classList.remove('bg-success')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-warning')\n  }\n  \n  const bgtoggle=(cls)=>{\n    removebgclasses();\n    document.body.classList.add('bg-'+cls)\n      document.title='TextUtils - Home'\n      if (mode==='dark'){\n        setbtntext('Hybrid Mode Enabled')\n      }\n      else{\n        setbtntext('Dark Mode')\n      }\n    }\n  \n\n  const togglemode=()=>{\n    removebgclasses();\n      if (mode==='light' ){\n        setMode('dark')\n        document.body.style.backgroundColor='#3d5266'\n        setbtntext('Dark Mode Enabled')\n        document.title='TextUtils - DarkMode'\n      }\n      else{\n        setMode('light')\n        document.body.style.backgroundColor='white'\n        setbtntext('Dark Mode')\n        document.title='TextUtils - Home'\n      }\n    }\n\n  return (\n    <>\n    <Navbar mode={mode} togglemode={togglemode} btntext={btntext} bgtoggle={bgtoggle} showalert={showalert}/>\n    <Alert alert={alert}/>\n    <div className='container my-3'>\n         <TextForms heading=\"Enter the text to analyze\"  mode={mode} showalert={showalert}/> \n    </div>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}